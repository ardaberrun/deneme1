version: '3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: stack-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: stack-kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_HOST_NAME=YOUR_IP_ADDRESS
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://YOUR_IP_ADDRESS:9092
      # - KAFKA_CFG_LISTENERS=INTERNAL://:9093,CLIENT://:9092
      # - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,CLIENT://kafka:9092
      # - KAFKA_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      # - KAFKA_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-network 
  mongo:
    image: mongo
    volumes:
      - data-volume:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: stack-backend
    container_name: stack-server
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - kafka
    networks:
      - app-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: stack-frontend
    container_name: stack-client
    volumes:
      - ./client/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - server
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
    app-network:
        driver: bridge

volumes:
    data-volume:
    node_modules:
    web-root:
      driver: local